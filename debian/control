Source: golang-github-oklog-run
Section: devel
Priority: optional
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders:
 Dawid Dziurla <dawidd0811@gmail.com>,
 Dmitry Smirnov <onlyjob@debian.org>,
Rules-Requires-Root: no
Build-Depends:
 debhelper-compat (= 12),
 dh-golang,
Build-Depends-Indep:
 golang-any,
Standards-Version: 4.5.0
Homepage: https://github.com/oklog/run
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-oklog-run
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-oklog-run.git
XS-Go-Import-Path: github.com/oklog/run
Testsuite: autopkgtest-pkg-go

Package: golang-github-oklog-run-dev
Architecture: all
Depends:
 ${misc:Depends},
Multi-Arch: foreign
Description: Universal mechanism to manage goroutine lifecycles
 Create a zero-value run.Group, and then add actors to it. Actors are
 defined as a pair of functions: an execute function, which should
 run synchronously; and an interrupt function, which, when invoked,
 should cause the execute function to return. Finally, invoke Run,
 which concurrently runs all of the actors, waits until the first actor
 exits, invokes the interrupt functions, and finally returns control
 to the caller only once all actors have returned. This general-purpose
 API allows callers to model pretty much any runnable task, and achieve
 well-defined lifecycle semantics for the group.
